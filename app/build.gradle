plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
        freeCompilerArgs += '-Xopt-in=kotlin.time.ExperimentalTime,' +
                'kotlinx.coroutines.ExperimentalCoroutinesApi'
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs += '-Xopt-in=androidx.paging.ExperimentalPagingApi'
    }
}

android {
    signingConfigs {
        debug {
            def propsFile = rootProject.file('keystore.properties')
            def props = new Properties()
            props.load(new FileInputStream(propsFile))

            storeFile file(props['debug.storeFile'])
            storePassword props['debug.storePassword']
            keyAlias props['debug.keyAlias']
            keyPassword props['debug.keyPassword']
        }
    }

    compileSdkVersion 30

    defaultConfig {
        applicationId "me.federicopeyrani.duetto"
        minSdkVersion 22
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation project(':spotify-web-api')

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.4'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.palette:palette-ktx:1.0.0'

    // Room
    def room_version = '2.3.0-rc01'
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    // Dagger
    implementation 'com.google.dagger:hilt-android:2.33-beta'
    kapt 'com.google.dagger:hilt-compiler:2.33-beta'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    testImplementation 'io.kotest:kotest-assertions-core:4.4.3'
    androidTestImplementation 'io.kotest:kotest-assertions-core:4.4.3'
    testImplementation 'io.mockk:mockk:1.11.0'

    // Kotlin coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'

    // Paging
    implementation "androidx.paging:paging-runtime-ktx:3.0.0-beta02"

    // Spotify sdk
    implementation files('libs/spotify-auth-release-1.2.3.aar')
    implementation "com.google.code.gson:gson:2.8.6"

    // OkHttp and Retrofit
    implementation "com.squareup.okhttp3:okhttp:4.9.1"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0'
    // Testing
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.0'

    // Coil
    implementation("io.coil-kt:coil-base:1.1.1")
}